import Head from 'next/head'
import { useState, useRef } from 'react';
import Multiselect from 'multiselect-react-dropdown';
import { useSession } from 'next-auth/react';
import { truncate } from '../components/Songs';


export const getStaticProps = async context => {
    const songsProps = await fetch('http://localhost:8000/api/songs/forPlaylists/')
        .then(res => res.json())

    return {
        props: { songsProps },
    };
};


const AddPlaylists = ({ songsProps }) => {
    const [name, setName] = useState('');
    const [songs, setSongs] = useState(songsProps);
    const [selectedSongs, setSelectedSongs] = useState([]);
    const [coverImage, setCoverImage] = useState('');
    const { data: session } = useSession()
    const ref = useRef();

    const modifyList = (list) => {
        const newList = list.map(song => {
            return song._id
        })
        console.log('\n new List \n', newList, '\n old List \n', list)
        setSelectedSongs(newList)
    }

    const onSubmit = async (e) => {
        e.preventDefault();
        console.log(name, selectedSongs, coverImage)
        const message = await fetch('http://localhost:8000/api/playlists/',
            {
                method: 'POST',
                body: JSON.stringify({ name, songs: selectedSongs, coverImage, public: true }),
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${session.accessToken}`
                }
            });
        console.log(message)

        setName('');
        setCoverImage('');
        setSelectedSongs([]);
        ref.current.resetSelectedValues();
    }



    return <div>
        <Head>
            <title>Artist App - Add Songs</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='grid place-items-center'>
            <form onSubmit={onSubmit}>
                <div className="form-control w-full max-w-xs">
                    <label className="label">
                        <span className="label-text">Title</span>
                    </label>
                    <input type="text"
                        placeholder="Type here"
                        className="input input-bordered w-full max-w-xs"
                        value={name} onChange={e => setName(e.target.value)} />
                </div>

                <div className="form-control w-full max-w-xs">
                    <label className="label">
                        <span className="label-text">Cover Image URL</span>
                    </label>
                    <input type="text"
                        placeholder="Type here"
                        className="input input-bordered rounded w-full max-w-xs"
                        value={coverImage} onChange={e => setCoverImage(e.target.value)} />
                </div>

                <div className="form-control w-full max-w-xs my-2 ">
                    <label className="label">
                        <span className="label-text">Add Some Songs</span>
                    </label>
                    <Multiselect
                        ref={ref}
                        options={songs}
                        onSelect={(list, value) => { modifyList(list) }}
                        onRemove={(list) => { modifyList(list) }}
                        displayValue="title"
                        avoidHighlightFirstOption="true"
                        showArrow
                        selectedValueDecorator={(option) => { return truncate(option, 7, 10) }}
                    />

                </div>
                <button type='submit' className='btn btn-primary w-full'>Submit</button>
            </form>

        </div>

    </div>;
};
export default AddPlaylists;